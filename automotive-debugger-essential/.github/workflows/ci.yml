name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Frontend Tests and Linting
  frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint || true

    - name: Run TypeScript check
      run: npx tsc --noEmit

    - name: Run tests
      run: npm test -- --coverage --watchAll=false

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info

  # Backend Tests and Linting
  backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Python dependencies
      run: |
        cd python-backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio

    - name: Run Python linting
      run: |
        cd python-backend
        pip install flake8 black isort
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        black --check .
        isort --check-only .

    - name: Run Python tests
      run: |
        cd python-backend
        pytest --cov=. --cov-report=xml --cov-report=term-missing

    - name: Upload Python coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./python-backend/coverage.xml

  # Build Test (Electron)
  build-test:
    runs-on: ubuntu-latest
    needs: [frontend, backend]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Test Electron build
      run: |
        npm run electron:build --dry-run || true

  # Security Scanning
  security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run npm audit
      run: npm audit --audit-level=high || true

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Run Python security check
      run: |
        pip install safety bandit
        cd python-backend
        safety check -r requirements.txt || true
        bandit -r . -x tests/ || true